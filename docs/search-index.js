var searchIndex = JSON.parse('{\
"mouse_sovec":{"doc":"mouse_sovec","i":[[3,"SoVec","mouse_sovec","`SoVec` stands for `Small optimized Vector` .",null,null],[11,"new","","Creates a new empty instance.",0,[[]]],[11,"with_capacity","","Creates a new empty instance whose capacity is greater…",0,[[]]],[11,"len","","Returns the number of the elements `self` is holding.",0,[[]]],[11,"is_empty","","Returns true if `self` is not holding any element, or false.",0,[[]]],[11,"set_len","","Forces the length of `self` to `new\\\\_len` .",0,[[]]],[11,"capacity","","Returns the number of the elements `self` can hold without…",0,[[]]],[11,"reserve_exact","","Reserves the minimum capacity to insert `additional` more…",0,[[]]],[11,"push","","Appends `elm` to the end of `self` .",0,[[]]],[11,"pop","","Removes the last element and returns it if any.",0,[[],["option",4]]],[11,"as_ptr","","Returns a raw pointer to the buffer of `self` .",0,[[]]],[11,"as_mut_ptr","","Returns a raw pointer to the buffer of `self` .",0,[[]]],[11,"clear","","Removes the all elements keeping the allocated capacity,…",0,[[]]],[11,"truncate","","Enshortens `self`, keeping the first `new_len` elements…",0,[[]]],[11,"shrink_to_fit","","Shrinks the capacitance of `self` as much as possible.",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"drop","","",0,[[]]],[11,"as_mut","","",0,[[]]],[11,"as_ref","","",0,[[]]],[11,"from","","",0,[[]]],[11,"default","","",0,[[]]]],"p":[[3,"SoVec"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);